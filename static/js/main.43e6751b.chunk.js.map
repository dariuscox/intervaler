{"version":3,"sources":["components/Stopwatch.jsx","components/About.jsx","components/Timer.jsx","components/Error.jsx","components/Navigation.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Stopwatch","useState","seconds","setSeconds","minutes","setMinutes","isActive","setIsActive","secondsDisplayed","setSecondsDisplayed","useEffect","interval","setInterval","newMinutes","Math","floor","clearInterval","className","onClick","About","Timer","secondsInput","setSecondsInput","minutesInput","setMinutesInput","reset","console","log","Form","Row","Col","Control","placeholder","onChange","e","parseInt","target","value","timer","Error","Navigation","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","inline","FormControl","type","Button","App","basename","process","path","component","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43e6751b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Stopwatch = () => {\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [secondsDisplayed, setSecondsDisplayed] = useState(0);\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setSeconds(0);\n    setSecondsDisplayed(0);\n    setMinutes(0);\n    setIsActive(false);\n  }\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n        let newMinutes = Math.floor(seconds/60);\n        setMinutes(minutes => newMinutes);\n        setSecondsDisplayed(secondsDisplayed => seconds - (newMinutes*60));\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, minutes, seconds, secondsDisplayed]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"time\">\n        {minutes}m {secondsDisplayed}s\n      </div>\n      <div className=\"row\">\n        <button className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\n          {isActive ? 'Pause' : 'Start'}\n        </button>\n        <button className=\"button\" onClick={reset}>\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Stopwatch;","import React from 'react';\n \nconst About = () => {\n    return (\n       <div>\n          <h1>About</h1>\n          <p>About</p>\n       </div>\n    );\n}\n \nexport default About;\n","import React, { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst Timer = () => {\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [secondsDisplayed, setSecondsDisplayed] = useState(0);\n  const [secondsInput, setSecondsInput] = useState(0);\n  const [minutesInput, setMinutesInput] = useState(0);\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setSeconds(0);\n    setSecondsDisplayed(0);\n    setMinutes(0);\n    setIsActive(false);\n  }\n\n  function setTimer() {\n    let timer = 0;\n    if (!minutesInput){ \n      setMinutesInput(0);\n    }\n    timer = (minutesInput*60) + secondsInput;\n    setSeconds(timer)\n    setMinutes(Math.floor(timer/60));\n    setSecondsDisplayed(secondsDisplayed => (timer - (minutesInput*60)));\n    console.log(minutes)\n    console.log(seconds)\n    console.log(timer)\n  }\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      if (secondsDisplayed === 0 && seconds <0){\n        console.log(seconds)\n        reset()\n      }\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds - 1);\n        let newMinutes = Math.floor(seconds/60);\n        setMinutes(minutes => newMinutes);\n        setSecondsDisplayed(secondsDisplayed => seconds - (newMinutes*60));\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, minutes, seconds, secondsDisplayed]);\n\n  return (\n    <div className=\"app\">\n      <div>\n        <Form>\n          <Row>\n            <Col>\n              <Form.Control placeholder=\"Minutes\" \n              onChange={e => setMinutesInput( parseInt(e.target.value ))}\n              />\n            </Col>\n            <Col>\n              <Form.Control placeholder=\"Seconds\" \n              onChange={e => setSecondsInput(parseInt( e.target.value ))}\n              />\n            </Col>\n          </Row>\n        </Form>\n        <button className=\"button\" onClick={setTimer}>\n                Set Timer\n        </button>\n      </div>\n      <div className=\"time\">\n        {minutes}m {secondsDisplayed}s\n      </div>\n      <div className=\"row\">\n        <button className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\n          {isActive ? 'Pause' : 'Start'}\n        </button>\n        <button className=\"button\" onClick={reset}>\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;","import React from 'react';\n \nconst Error = () => {\n    return (\n       <div>\n          <p>Error: Page does not exist!</p>\n       </div>\n    );\n}\n \nexport default Error;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport FormControl from 'react-bootstrap/FormControl'\n \nconst Navigation = () => {\n    return (\n       <div>\n           <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n                <Navbar.Brand href=\"/intervaler\">Stopwatch</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link className=\"navlinks\" href=\"/intervaler/timer\">Timer</Nav.Link>\n                    <Nav.Link className=\"navlinks\" href=\"/intervaler/about\">About</Nav.Link>\n                    </Nav>\n                    <Form inline>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    <a target=\"_blank\" href=\"https://www.youtube.com/watch?v=9Deg7VrpHbM\">\n                    <Button variant=\"outline-success\">Search</Button>\n                    </a>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n       </div>\n    );\n}\n \nexport default Navigation;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport './stylesheets/index.scss';\nimport Stopwatch from './components/Stopwatch'\nimport About from './components/About'\nimport Timer from './components/Timer'\nimport Error from './components/Error';\nimport Navigation from './components/Navigation';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n    return (      \n       <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div>\n          <Navigation />\n            <Switch>\n             <Route path=\"/intervaler\" component={Stopwatch}/>\n             <Route path=\"/intervaler/timer\" component={Timer}/>\n             <Route path=\"/intervaler/about\" component={About}/>\n             <Route component={Error}/>\n           </Switch>\n        </div> \n      </BrowserRouter>\n    ); \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}